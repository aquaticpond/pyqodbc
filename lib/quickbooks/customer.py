from lib.quickbooks.entity import Entity

class Customer(Entity):

    qodbc_table = 'Customer'
    mysql_table = 'customer'

    field_map = (
        ('ListID',                  'qb_id'),
        ('TimeCreated',             'time_created'),
        ('TimeModified',            'time_modified'),
        ('Name',                    'name'),
        ('FullName',                'full_name'),
        ('IsActive',                'is_active'),
        ('ClassRefFullName',        'class'),
        ('CompanyName',             'company_name'),
        ('FirstName',               'first_name'),
        ('MiddleName',              'middle_name'),
        ('LastName',                'last_name'),
        ('Phone',                   'phone'),
        ('AltPhone',                'phone_alternate'),
        ('Email',                   'email'),
        ('Cc',                      'email_alternate'),
        ('CustomerTypeRefFullName', 'customer_type'),
        ('TermsRefFullName',        'terms'),
        ('Balance',                 'balance'),
        ('TotalBalance',            'total_balance'),
        ('OpenBalance',             'open_balance'),
        ('OpenBalanceDate',         'open_balance_date'),
        ('SalesTaxCodeRefFullName', 'sales_tax_code'),
        ('TaxCodeRefFullName',      'tax_code'),
        ('ItemSalesTaxRefFullName', 'item_sales_tax'),
        ('Notes',                   'notes'),
        ('BillAddressAddr1',        'billing_street_1'),
        ('BillAddressAddr2',        'billing_street_2'),
        ('BillAddressAddr3',        'billing_street_3'),
        ('BillAddressAddr4',        'billing_street_4'),
        ('BillAddressAddr5',        'billing_street_5'),
        ('BillAddressCity',         'billing_city'),
        ('BillAddressState',        'billing_state'),
        ('BillAddressProvince',     'billing_province'),
        ('BillAddressCounty',       'billing_county'),
        ('BillAddressPostalCode',   'billing_postcode'),
        ('BillAddressCountry',      'billing_country'),
        ('BillAddressNote',         'billing_note'),
        ('BillAddressBlockAddr1',   'billing_block_1'),
        ('BillAddressBlockAddr2',   'billing_block_2'),
        ('BillAddressBlockAddr3',   'billing_block_3'),
        ('BillAddressBlockAddr4',   'billing_block_4'),
        ('BillAddressBlockAddr5',   'billing_block_5')
    )

    update_fields = (
        'time_modified',
        'name',
        'full_name',
        'is_active',
        'class',
        'company_name',
        'first_name',
        'middle_name',
        'last_name',
        'phone',
        'phone_alternate',
        'email',
        'email_alternate',
        'customer_type',
        'terms',
        'balance',
        'total_balance',
        'open_balance',
        'open_balance_date',
        'sales_tax_code',
        'tax_code',
        'item_sales_tax',
        'notes',
        'billing_street_1',
        'billing_street_2',
        'billing_street_3',
        'billing_street_4',
        'billing_street_5',
        'billing_city',
        'billing_state',
        'billing_province',
        'billing_county',
        'billing_postcode',
        'billing_country',
        'billing_note',
        'billing_block_1',
        'billing_block_2',
        'billing_block_3',
        'billing_block_4',
        'billing_block_5',
    )

    custom_mysql_fields = ('company_file', )

    def append_custom_data(self, raw):
        return [each + (self.company_file,) for each in raw]